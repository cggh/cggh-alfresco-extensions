<alfresco-config>


	<config replace="true">
		<flags>
			<!-- Developer debugging setting to turn on DEBUG mode for client scripts 
				in the browser -->

			<client-debug>false</client-debug>

			<!-- LOGGING can always be toggled at runtime when in DEBUG mode (Ctrl, 
				Ctrl, Shift, Shift). This flag automatically activates logging on page load. -->
			<client-debug-autologging>false</client-debug-autologging>
		</flags>

	</config>

   <config evaluator="string-compare" condition="WebFramework">
      <web-framework>
         <!-- SpringSurf Autowire Runtime Settings -->
         <!-- 
              Developers can set mode to 'development' to disable; SpringSurf caches,
              FreeMarker template caching and Rhino JavaScript compilation.
         -->
         <autowire>
            <!-- Pick the mode: "production" or "development" -->
            <mode>production</mode>
         </autowire>

         <!-- Allows extension modules with <auto-deploy> set to true to be automatically deployed -->
         <module-deployment>
            <mode>manual</mode>
            <enable-auto-deploy-modules>true</enable-auto-deploy-modules>
         </module-deployment>
      </web-framework>
   </config>

   <!-- Disable the CSRF Token Filter -->
   <!--
   <config evaluator="string-compare" condition="CSRFPolicy" replace="true">
      <filter/>
   </config>
   -->

   <!--
      To run the CSRF Token Filter behind 1 or more proxies that do not rewrite the Origin or Referere headers:

      1. Copy the "CSRFPolicy" default config in share-security-config.xml and paste it into this file.
      2. Replace the old config by setting the <config> element's "replace" attribute to "true" like below:
         <config evaluator="string-compare" condition="CSRFPolicy" replace="true">
      3. To every <action name="assertReferer"> element add the following child element
         <param name="referer">http://www.proxy1.com/.*|http://www.proxy2.com/.*</param>
      4. To every <action name="assertOrigin"> element add the following child element
         <param name="origin">http://www.proxy1.com|http://www.proxy2.com</param>
   -->
   <!--
      CSRF filter config to mitigate CSRF/Seasurfing/XSRF attacks

      To disable the CSRF filter override the <filter> to not contain any values, see share-config-custom.xml for
      an example.

      If you have a custom resource(s) that a client POST to that can't accept a token, for whatever reason, then make
      sure to copy the entire CSRFPolicy config and place it in your share-config-custom.xml file
      with the replace="true" attribute and make sure to add a new <rule> in the top of the <filter> element,
      which has a <request> element matching your requests, and uses only the "assertReferer" & "assertOrigin" actions.

      I.e.
      <rule>
         <request>
            <method>POST</method>
            <path>/proxy/alfresco/custom/repoWebscript/withoutParams|/service/custom/shareResource/thatMayHaveParams(\?.+)?</path>
         </request>
         <action name="assertReferer">
            <param name="referer">{referer}</param>
         </action>
         <action name="assertOrigin">
            <param name="origin">{origin}</param>
         </action>
      </rule>
   -->
   <config evaluator="string-compare" condition="CSRFPolicy" replace="true">

      <!--
         Properties that may be used inside the rest of the CSRFPolicy config to avoid repetition but
         also making it possible to provide different values in different environments.
         I.e. Different "Referer" & "Origin" properties for test & production etc.
         Reference a property using "{propertyName}".
      -->
      <properties>

         <!-- There is normally no need to override this property -->
         <token>Alfresco-CSRFToken</token>

         <!--
            Override and set this property with a regexp that if you have placed Share behind a proxy that
            does not rewrite the Referer header.
         -->
         <referer>http(s)?://alfresco(.*)\.(cggh|malariagen)\.(org|net)(/)?.*</referer>

         <!--
            Override and set this property with a regexp that if you have placed Share behind a proxy that
            does not rewrite the Origin header.
         -->
         <origin>http(s)?://alfresco(.*)\.(cggh|malariagen)\.(org|net)(/)?.*</origin>
      </properties>

      <!--
        Will be used and exposed to the client side code in Alfresco.contants.CSRF_POLICY.
        Use the Alfresco.util.CSRFPolicy.getHeader() or Alfresco.util.CSRFPolicy.getParameter() with Alfresco.util.CSRFPolicy.getToken()
        to set the token in custom 3rd party code.
      -->
      <client>
         <cookie>{token}</cookie>
         <header>{token}</header>
         <parameter>{token}</parameter>
      </client>

      <!-- The first rule with a matching request will get its action invoked, the remaining rules will be ignored. -->
      <filter>

         <!--
            Certain webscripts shall not be allowed to be accessed directly form the browser.
            Make sure to throw an error if they are used.
         -->
         <rule>
            <request>
               <path>/proxy/alfresco/remoteadm/.*</path>
            </request>
            <action name="throwError">
               <param name="message">It is not allowed to access this url from your browser</param>
            </action>
         </rule>

         <!--
            Certain Repo webscripts should be allowed to pass without a token since they have no Share knowledge.
            TODO: Refactor the publishing code so that form that is posted to this URL is a Share webscript with the right tokens.
         -->
         <rule>
            <request>
               <method>POST</method>
               <path>/proxy/alfresco/api/publishing/channels/.+</path>
            </request>
            <action name="assertReferer">
               <param name="referer">{referer}</param>
            </action>
            <action name="assertOrigin">
               <param name="origin">{origin}</param>
            </action>
         </rule>

         <!--
            Certain Surf POST requests from the WebScript console must be allowed to pass without a token since
            the Surf WebScript console code can't be dependent on a Share specific filter.
         -->
         <rule>
            <request>
               <method>POST</method>
               <path>/page/caches/dependency/clear|/page/index|/page/surfBugStatus|/page/modules/deploy|/page/modules/module|/page/api/javascript/debugger|/page/console</path>
            </request>
            <action name="assertReferer">
               <param name="referer">{referer}</param>
            </action>
            <action name="assertOrigin">
               <param name="origin">{origin}</param>
            </action>
         </rule>

         <!-- Certain Share POST requests does NOT require a token -->
         <rule>
            <request>
               <method>POST</method>
               <path>/page/dologin(\?.+)?|/page/site/[^/]+/start-workflow|/page/start-workflow|/page/context/[^/]+/start-workflow</path>
            </request>
            <action name="assertReferer">
               <param name="referer">{referer}</param>
            </action>
            <action name="assertOrigin">
               <param name="origin">{origin}</param>
            </action>
         </rule>

         <!-- Assert logout is done from a valid domain, if so clear the token when logging out -->
         <rule>
            <request>
               <method>POST</method>
               <path>/page/dologout(\?.+)?</path>
            </request>
            <action name="assertReferer">
               <param name="referer">{referer}</param>
            </action>
            <action name="assertOrigin">
               <param name="origin">{origin}</param>
            </action>
            <action name="clearToken">
               <param name="session">{token}</param>
               <param name="cookie">{token}</param>
            </action>
         </rule>

         <!-- Make sure the first token is generated -->
         <rule>
            <request>
               <session>
                  <attribute name="_alf_USER_ID">.+</attribute>
                  <attribute name="{token}"/>
                  <!-- empty attribute element indicates null, meaning the token has not yet been set -->
               </session>
            </request>
            <action name="generateToken">
               <param name="session">{token}</param>
               <param name="cookie">{token}</param>
            </action>
         </rule>

         <!-- Refresh token on new "page" visit when a user is logged in -->
         <rule>
            <request>
               <method>GET</method>
               <path>/page/.*</path>
               <session>
                  <attribute name="_alf_USER_ID">.+</attribute>
                  <attribute name="{token}">.+</attribute>
               </session>
            </request>
            <action name="generateToken">
               <param name="session">{token}</param>
               <param name="cookie">{token}</param>
            </action>
         </rule>

         <!--
            Verify multipart requests from logged in users contain the token as a parameter
            and also correct referer & origin header if available
         -->
         <rule>
            <request>
               <method>POST</method>
               <header name="Content-Type">multipart/.+</header>
               <session>
                  <attribute name="_alf_USER_ID">.+</attribute>
               </session>
            </request>
            <action name="assertToken">
               <param name="session">{token}</param>
               <param name="parameter">{token}</param>
            </action>
            <action name="assertReferer">
               <param name="referer">{referer}</param>
            </action>
            <action name="assertOrigin">
               <param name="origin">{origin}</param>
            </action>
         </rule>

         <!--
            Verify that all remaining state changing requests from logged in users' requests contains a token in the
            header and correct referer & origin headers if available. We "catch" all content types since just setting it to
            "application/json.*" since a webscript that doesn't require a json request body otherwise would be
            successfully executed using i.e."text/plain".
         -->
         <rule>
            <request>
               <method>POST|PUT|DELETE</method>
               <session>
                  <attribute name="_alf_USER_ID">.+</attribute>
               </session>
            </request>
            <action name="assertToken">
               <param name="session">{token}</param>
               <param name="header">{token}</param>
            </action>
            <action name="assertReferer">
               <param name="referer">{referer}</param>
            </action>
            <action name="assertOrigin">
               <param name="origin">{origin}</param>
            </action>
         </rule>
      </filter>

   </config>

   <!--
      Remove the default wildcard setting and use instead a strict whitelist of the only domains that shall be allowed
      to be used inside iframes (i.e. in the WebView dashlet on the dashboards)
   -->
   <!--
   <config evaluator="string-compare" condition="IFramePolicy" replace="true">
      <cross-domain>
         <url>http://www.trusted-domain-1.com/</url>
         <url>http://www.trusted-domain-2.com/</url>
      </cross-domain>
   </config>
   -->

   <!-- Turn off header that stops Share from being displayed in iframes on pages from other domains -->
   <!--
   <config evaluator="string-compare" condition="SecurityHeadersPolicy">
      <headers>
         <header>
            <name>X-Frame-Options</name>
            <enabled>false</enabled>
         </header>
      </headers>
   </config>
   -->

   <!-- Prevent browser communication over HTTP (for HTTPS servers) -->
   <!--
   <config evaluator="string-compare" condition="SecurityHeadersPolicy">
      <headers>
         <header>
            <name>Strict-Transport-Security</name>
            <value>max-age=31536000</value>
         </header>
      </headers>
   </config>
   -->

	<!-- Document Library config section -->
	<config evaluator="string-compare" condition="DocumentLibrary">

		<tree>
			<!-- Whether the folder Tree component should enumerate child folders 
				or not. This is a relatively expensive operation, so should be set to "false" 
				for Repositories with broad folder structures. -->
			<evaluate-child-folders>false</evaluate-child-folders>

			<!-- Optionally limit the number of folders shown in treeview throughout 
				Share. -->
			<maximum-folder-count>-1</maximum-folder-count>
		</tree>

		<!-- Used by the "Manage Aspects" action For custom aspects, remember to 
			also add the relevant i18n string(s) cm_myaspect=My Aspect -->
		<aspects>
			<!-- Aspects that a user can see -->
			<visible>
				<aspect name="cggh:collaboration" />
			</visible>

			<!-- Aspects that a user can add. Same as "visible" if left empty -->
			<addable>
			</addable>

			<!-- Aspects that a user can remove. Same as "visible" if left empty -->
			<removeable>
			</removeable>
		</aspects>

		<!-- Used by the "Change Type" action Define valid subtypes using the following 
			example: <type name="cm:content"> <subtype name="cm:mysubtype" /> </type> 
			Remember to also add the relevant i18n string(s): cm_mysubtype=My SubType -->
		<types>
			<type name="cm:content">
			    <subtype name="cggh:publication" />
			</type>

			<type name="cm:folder">
				<subtype name="cggh:collaborationFolder" />
			</type>
		</types>

      <!--
         Google Docs™ integration
      -->
      <google-docs>
         <!--
            Enable/disable the Google Docs UI integration (Extra types on Create Content menu, Google Docs actions).
         -->
         <enabled>true</enabled>

         <!--
            The mimetypes of documents Google Docs allows you to create via the Share interface.
            The I18N label is created from the "type" attribute, e.g. google-docs.doc=Google Docs&trade; Document
         -->
         <creatable-types>
            <creatable type="doc">application/vnd.openxmlformats-officedocument.wordprocessingml.document</creatable>
            <creatable type="xls">application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</creatable>
            <creatable type="ppt">application/vnd.ms-powerpoint</creatable>
         </creatable-types>
      </google-docs>
      
		<metadata-templates>
			<template id="isCollaboration">
				<evaluator>evaluator.doclib.metadata.hasCollaborationAspect
				</evaluator>
				<line index="10" id="date" view="detailed">{date}{size}</line>
				<line index="50" id="contact" view="detailed">{cggh_collaborationStatus
					cggh.metadata.statusType} {cggh_enquiryStatus}
					{cggh_strategicNature}{cggh_samplesExpected
					cggh.metadata.samplesExpected}

					{cggh_liaison cggh.metadata.liaison}
				</line>
				<line index="60" id="exec" view="detailed">
					{cggh_groupPI
					cggh.metadata.PIType} {cggh_groupContact
					cggh.metadata.contactsType} {cggh_groupData
					cggh.metadata.dataType} {cggh_groupMail
					cggh.metadata.mailType} {cggh_groupPublic
					cggh.metadata.publicType}
				</line>
				<line index="70" id="species" view="detailed">{cggh_species}
					{cggh_sampleCountry}
				</line>
				<line index="80" id="internal" view="detailed">{cggh_internalDescription}
				</line>
			</template>

		</metadata-templates>

	</config>
	
	<config evaluator="string-compare" condition="DocLibCustom">
		<dependencies>
			<js src="components/documentlibrary/cggh-collab-renderer.js" />
		</dependencies>
	</config>
	
	<config evaluator="string-compare" condition="DocLibActions">



		<actionGroups>
			<actionGroup id="folder-browse">
				<action index="350" id="document-view-googlemaps" />
			</actionGroup>
			<actionGroup id="folder-details">
				<action index="350" id="document-view-googlemaps" />
			</actionGroup>
		</actionGroups>
	</config>
	<config evaluator="string-compare" condition="Action Wizards">
		<aspects>
			<aspect name="cm:generalclassifiable" />
			<aspect name="cm:complianceable" />
			<aspect name="cm:dublincore" />
			<aspect name="cm:effectivity" />
			<aspect name="cm:summarizable" />
			<aspect name="cm:versionable" />
			<aspect name="cm:templatable" />
			<aspect name="cm:emailed" />
			<aspect name="emailserver:aliasable" />
			<aspect name="cm:taggable" />
			<aspect name="app:inlineeditable" />
			<aspect name="gd:googleEditable" />
			<aspect name="cm:geographic" />
			<aspect name="exif:exif" />
			<aspect name="cggh:collaboration" />
		</aspects>
	</config>

	<!-- Repository Library config section -->
	<config evaluator="string-compare" condition="RepositoryLibrary"
		replace="true">
		<!-- Whether the link to the Repository Library appears in the header component 
			or not. -->
		<visible>true</visible>
	</config>

	<config evaluator="string-compare" condition="AdvancedSearch">
		<advanced-search>
			<!-- Additional Forms for the advanced search type list -->
			<forms>
				<form label="Collaboration Folders" description="Searches for all Collaboration Folders">cggh:collaborationFolder
				</form>
			</forms>
		</advanced-search>
	</config>

	<config evaluator="node-type" condition="cggh:collaborationFolder">
		<forms>
			<!-- doesn't work here - only works for config sections without an evaluator 
				and condition -->
			<!-- <dependencies> <css src="/components/forms/custom-label-layout.css" 
				/> </dependencies> -->
			<form>
				<!-- <edit-form template="/org/cggh/cms/components/form/controls/common/2-column-edit-form.ftl" 
					/> -->
				<field-visibility>
					<!-- cm:folder -->
					<show id="cm:name" />
					<show id="cm:title" force="true" />
					<show id="cm:description" force="true" />
					<show id="cm:taggable" for-mode="view" force="true" />
					<show id="cm:categories" />

					<!-- cggh:collaborationFolder -->
					<show id="cggh:collaborationStatus" />
					<show id="cggh:enquiryStatus" />
					<show id="cggh:liaison" force="true" />
					<show id="cggh:ragStatus"/>
					<show id="cggh:species" />
					<show id="cggh:sampleCountry" />
					<show id="cggh:samplesExpected" />
					<show id="cggh:samplesProcessed"/>
					<show id="cggh:firstSample" />
					<show id="cggh:lastSample" />
					<show id="cggh:nextReview" />
					<show id="cggh:strategicNature" />
					<show id="cggh:internalDescription" />
					<show id="cggh:collaborationNotes" />
					<show id="cggh:webTitle" />
					<show id="cggh:webTitleApproved" />
					<show id="cggh:descriptionApproved" />
					<show id="cggh:legacyID" />
					<show id="cggh:projectsdl" />
					<show id="cggh:webStudy" />
					<show id="cggh:publications" />
					<show id="cggh:collaborationDoc" />
				</field-visibility>
				<appearance>
					<!-- Field sets -->
					<!-- Seems to have trouble with associations -->
					<set id="cgghMetadata" appearance="bordered-panel"
						label-id="cggh.collaborationFolder.metadata.header"
						template="/org/cggh/cms/components/form/controls/common/custom-set-study.ftl" />

					<!-- Field set "" -->
					<field id="cm:title">
						<control template="/org/alfresco/components/form/controls/textfield.ftl" />
					</field>
					<field id="cggh:webTitle" label-id="cggh.metadata.webTitle">
					   <control template="/org/alfresco/components/form/controls/textfield.ftl" />
					<!-- Too flaky 
						<control template="/org/alfresco/components/form/controls/richtext.ftl">
                            <control-param name="editorAppearance">custom</control-param>
                            <control-param name="editorParameters">
                                theme_advanced_resizing: true,
                                theme_advanced_buttons1: "bold,italic,underline",
                                theme_advanced_buttons2: null,
                                theme_advanced_buttons3: null
                            </control-param>
                        </control>
                        -->
					</field>
					<field id="cggh:legacyID" set="cgghMetadata">
						<control template="/org/alfresco/components/form/controls/textfield.ftl">
							<control-param name="style">width: 8em;</control-param>
						</control>
					</field>
					<field id="cggh:webTitleApproved" set="cgghMetadata"
						label-id="cggh.metadata.webTitleApproved" />
					<field id="cggh:descriptionApproved" set="cgghMetadata"
						label-id="cggh.metadata.descriptionApproved" />

					<field id="cm:description">
						<control template="/org/alfresco/components/form/controls/richtext.ftl">
							<control-param name="editorAppearance">custom</control-param>
							<control-param name="editorParameters">
								plugins: [ "advlist lists code"],
								toolbar: "bold italic | copy paste | bullist numlist | outdent indent blockquote | code",
								menubar: false,
								resize: "both"
							</control-param>
						</control>
					</field>
					<field id="cm:taggable">
						<control>
							<control-param name="compactMode">true</control-param>
							<control-param name="params">aspect=cm:taggable
							</control-param>
							<control-param name="createNewItemUri">/api/tag/workspace/SpacesStore
							</control-param>
							<control-param name="createNewItemIcon">tag</control-param>
						</control>
					</field>
					<field id="cm:categories">
						<control>
							<control-param name="compactMode">true</control-param>
						</control>
					</field>

					<!-- Field set "cgghMetadata" -->
					<field id="cggh:collaborationStatus" label-id="cggh.metadata.collaborationStatus"
						set="cgghMetadata" />
					<field id="cggh:enquiryStatus" label-id="cggh.metadata.enquiryStatus"
						set="cgghMetadata">
						<control template="/org/alfresco/components/form/controls/selectone.ftl">
							<control-param name="options">enquiry email received,dialogue open,awaiting funding,application form sent,application to be presented to SG|{cggh.data.reviewSG},under consideration by DK,collaboration agreement being drawn,collaboration agreement sent,collaboration active</control-param>
						</control>
						
					</field>
					<field id="cggh:liaison" label-id="cggh.metadata.liaison"
						set="cgghMetadata">
						<control template="/org/alfresco/components/form/controls/authority.ftl">
							<control-param name="compactMode">true</control-param>
							<control-param name="forceEditable">true</control-param>
						</control>
					</field>
					<field id="cggh:webStudy" label-id="cggh.metadata.webStudy"
						set="cgghMetadata">
						<control template="/org/alfresco/components/form/controls/association.ftl">
							<control-param name="startLocation">{parent}</control-param>
						</control>
					</field>
					<field id="cggh:publications" label-id="cggh.metadata.publications"
						set="cgghMetadata">
						<control template="/org/alfresco/components/form/controls/association.ftl">
							<control-param name="startLocation">/app:company_home/st:sites/cm:sequencing/cm:documentLibrary/cm:Publications
							</control-param>
						</control>
					</field>
					
					<field id="cggh:projectsdl" label-id="cggh.metadata.projects"
						set="cgghMetadata">
						<control template="/org/alfresco/components/form/controls/association.ftl">
							<control-param name="startLocation">/app:company_home/st:sites/cm:sequencing/cm:dataLists/cm:sequencingProjects</control-param>
						</control>
					</field>
					<!-- Linking to sites doesn't work brilliantly because not all projects have a site and 
					not all people have permission on all sites 
					<field id="cggh:projects" label-id="cggh.metadata.projects"
						set="cgghMetadata">
						<control template="/org/alfresco/components/form/controls/association.ftl">
							<control-param name="startLocation">{siteshome}</control-param>
						</control>
					</field>
					-->
					<field id="cggh:collaborationDoc" label-id="cggh.metadata.collabDoc"
						set="cgghMetadata">
						<control template="/org/alfresco/components/form/controls/association.ftl">
							<control-param name="startLocation">{self}</control-param>
						</control>
					</field>
					<field id="cggh:sampleCountry" label-id="cggh.metadata.studySites"
						set="cgghMetadata">
						<control template="/org/alfresco/components/form/controls/selectmany.ftl">
							<control-param name="size">8</control-param>
						</control>
					</field>
					<field id="cggh:ragStatus" label-id="cggh.metadata.ragStatus"
						set="cgghMetadata" />
					<field id="cggh:species" label-id="cggh.metadata.species"
						set="cgghMetadata" />
					<field id="cggh:samplesExpected" label-id="cggh.metadata.samplesExpected"
						set="cgghMetadata">
						<control template="/org/alfresco/components/form/controls/number.ftl">
							<control-param name="style">width: 8em;</control-param>
						</control>
					</field>
					<field id="cggh:samplesProcessed" label-id="cggh.metadata.samplesProcessed"
						set="cgghMetadata">
						<control template="/org/alfresco/components/form/controls/number.ftl">
							<control-param name="style">width: 8em;</control-param>
						</control>
					</field>
					<field id="cggh:firstSample" label-id="cggh.metadata.firstSample"
						set="cgghMetadata" />
					<field id="cggh:lastSample" label-id="cggh.metadata.lastSample"
						set="cgghMetadata" />
					<field id="cggh:nextReview" label-id="cggh.metadata.nextReview"
						set="cgghMetadata" />
					<field id="cggh:strategicNature" label-id="cggh.metadata.strategicNature"
						set="cgghMetadata" />
					<field id="cggh:internalDescription" label-id="cggh.metadata.intDescrip"
						set="cgghMetadata">
						<control template="/org/alfresco/components/form/controls/textarea.ftl" />
					</field>
					<field id="cggh:collaborationNotes" label-id="cggh.metadata.notes"
						set="cgghMetadata">
						<control template="/org/alfresco/components/form/controls/textarea.ftl" />
					</field>
				</appearance>
			</form>
		</forms>
	</config>

	<!-- SEARCH form definition -->
	<config evaluator="model-type" condition="cggh:collaborationFolder">
		<forms>
			<form id="search">
				<field-visibility>
					<show id="cm:name" />
					<show id="cm:title" force="true" />
					<show id="cm:description" force="true" />

					<!-- cggh:collaborationFolder -->

					<show id="cggh:contacts" force="true" />
					<show id="cggh:species" />
					<show id="cggh:ragStatus"/>
					<show id="cggh:sampleCountry" />
				</field-visibility>
				<appearance>
					<set id="cgghMetadata" appearance="bordered-panel"
						label-id="cggh.metadata.collaborationFolder" />

					<field id="cggh:contacts" label-id="cggh.metadata.contacts"
						set="cgghMetadata">
					</field>
					<field id="cggh:species" label-id="cggh.metadata.species"
						set="cgghMetadata" />
					<field id="cggh:ragStatus" label-id="cggh.metadata.ragStatus"
						set="cgghMetadata" />
					<field id="cggh:sampleCountry" label-id="cggh.metadata.sampleCountry"
						set="cgghMetadata" />

				</appearance>
			</form>
		</forms>
	</config>
	<!-- cggh:site type create form config -->
	<config evaluator="model-type" condition="cggh:site">
		<forms>
			<!-- Create item form -->
			<form>
				<field-visibility>
					<!-- cggh:site type -->
					<show id="cggh:siteName" />
					<show id="cggh:siteCountry" />
					<show id="cm:latitude" />
					<show id="cm:longitude" />
				</field-visibility>
				<create-form template="../data-lists/forms/dataitem.ftl" />
				<appearance>

					<field id="cm:latitude" label-id="cm.metadata.latitude" />
					<field id="cm:longitude" label-id="cm.metadata.longitude" />
				</appearance>
			</form>
		</forms>
	</config>

	<!-- cggh:site type create form config -->
	<config evaluator="model-type" condition="cggh:site">
		<forms>
			<!-- Create item form -->
			<form>
				<field-visibility>
					<!-- cggh:site type -->
					<show id="cggh:siteName" />
					<show id="cggh:siteCountry" />
					<show id="cm:latitude" />
					<show id="cm:longitude" />
				</field-visibility>
				<create-form template="../data-lists/forms/dataitem.ftl" />
				<appearance>

					<field id="cm:latitude" label-id="cm.metadata.latitude" />
					<field id="cm:longitude" label-id="cm.metadata.longitude" />
				</appearance>
			</form>
		</forms>
	</config>
	
	<!-- cggh:site type edit form config -->
	<config evaluator="model-type" condition="cggh:project">
		<forms>
			<!-- Data List pop-up edit form -->
			<form>
				<field-visibility>
					<show id="cm:name" />
				</field-visibility>
				<edit-form template="../data-lists/forms/dataitem.ftl" />
				<appearance>
				</appearance>
			</form>
		</forms>
	</config>

	<config evaluator="node-type" condition="st:site">
		<forms>
			<form>
				<field-visibility>
					<show id="cm:title" force="true" />
					<show id="cm:description" force="true" />
				</field-visibility>
			</form>
		</forms>
	</config>

	<config evaluator="node-type" condition="cggh:publication">
		<forms>
			<form>
				<field-visibility>
					<show id="cm:name" />
					<show id="cm:title" force="true" />
					<show id="cm:description" force="true" />

					<show id="cggh:PMID" />
					
					<show id="cggh:citationText" />
					<show id="cggh:DOI" />
				</field-visibility>
				<appearance>
					<set id="cgghMetadata" appearance="bordered-panel"
						label-id="cggh.publication.metadata.header" />

					<field id="cggh:PMID" label-id="cggh.metadata.PMID" set="cgghMetadata">
						<control template="/org/alfresco/components/form/controls/number.ftl">
						</control>
					</field>
					<field id="cggh:DOI" label-id="cggh.metadata.DOI" set="cgghMetadata" />
					<field id="cggh:citationText" label-id="cggh.metadata.citation"
						set="cgghMetadata">
						<control template="/org/alfresco/components/form/controls/textarea.ftl">
						<!-- too flaky
						    <control-param name="editorAppearance">custom</control-param>
							<control-param name="editorParameters">
								theme_advanced_resizing: true,
								theme_advanced_buttons1: "bold,italic,underline",
								theme_advanced_buttons2: null,
								theme_advanced_buttons3: null
							</control-param>
						-->
						</control>
					</field>

				</appearance>
			</form>
		</forms>
	</config>

  <!-- 
        Overriding endpoints to reference an Alfresco server with external SSO enabled
        NOTE: If utilising a load balancer between web-tier and repository cluster, the "sticky
              sessions" feature of your load balancer must be used.
        NOTE: If alfresco server location is not localhost:8080 then also combine changes from the
              "example port config" section below.
        *Optional* keystore contains SSL client certificate + trusted CAs.
        Used to authenticate share to an external SSO system such as CAS
        Remove the keystore section if not required i.e. for NTLM.
        
        NOTE: For Kerberos SSO rename the "KerberosDisabled" condition above to "Kerberos"
        
        NOTE: For external SSO, switch the endpoint connector to "alfrescoHeader" and set
              the userHeader value to the name of the HTTP header that the external SSO
              uses to provide the authenticated user name.
        NOTE: For external SSO, Share now supports the "userIdPattern" mechanism as is available
              on the repository config for External Authentication sub-system. Add the following
              element to your "alfrescoHeader" connector config:
              <userIdPattern>^ignore-(\w+)-ignore</userIdPattern>
              This is an example, ensure the Id pattern matches your repository config.
        NOTE: For external SSO, Share now supports stateless (no Http Session or sticky session)
              connection to the repository when using the alfrescoHeader remote user connector.
              e.g. You can change endpoint config to use the faster /service URL instead of the
              /wcs URL if you are using External Authentication and then remove sticky session config
              from your proxy between Share and Alfresco. Note that this is also faster because Share
              will no longer call the /touch REST API before every remote call to the repository.
   -->

	<config evaluator="string-compare" condition="Remote">
		<remote>
			<keystore>
				<path>alfresco/web-extension/alfresco-system.p12</path>
				<type>pkcs12</type>
				<password>alfresco-system</password>
			</keystore>

			<connector>
				<id>alfrescoCookie</id>
				<name>Alfresco Connector</name>
				<description>Connects to an Alfresco instance using cookie-based authentication</description>
				<class>org.alfresco.web.site.servlet.SlingshotAlfrescoConnector</class>
				<userHeader>X-Alfresco-Remote-User</userHeader>
			</connector>

			<connector>
				<id>alfrescoHeader</id>
				<name>Alfresco Connector</name>
				<description>Connects to an Alfresco instance using header and cookie-based authentication</description>
				<class>org.alfresco.web.site.servlet.SlingshotAlfrescoConnector</class>
				<userHeader>X-Alfresco-Remote-User</userHeader>
			</connector>

			<endpoint>
				<id>alfresco</id>
				<name>Alfresco - user access</name>
				<description>Access to Alfresco Repository WebScripts that require
					user authentication
				</description>
				<connector-id>alfrescoCookie</connector-id>
				<endpoint-url>http://localhost:8080/alfresco/wcs</endpoint-url>
				<identity>user</identity>
				<external-auth>true</external-auth>
			</endpoint>

			<endpoint>
				<id>alfresco-feed</id>
				<parent-id>alfresco</parent-id>
				<name>Alfresco Feed</name>
				<description>Alfresco Feed - supports basic HTTP authentication via
					the EndPointProxyServlet
				</description>
				<connector-id>alfrescoHeader</connector-id>
				<endpoint-url>http://localhost:8080/alfresco/wcs</endpoint-url>
				<identity>user</identity>
				<external-auth>true</external-auth>
			</endpoint>

			<endpoint>
				<id>alfresco-api</id>
				<parent-id>alfresco</parent-id>
				<name>Alfresco Public API - user access</name>
				<description>Access to Alfresco Repository Public API that require
					user authentication.
					This makes use of the authentication that is provided by parent
					'alfresco' endpoint.
				</description>
				<connector-id>alfrescoHeader</connector-id>
				<endpoint-url>http://localhost:8080/alfresco/api</endpoint-url>
				<identity>user</identity>
				<external-auth>true</external-auth>
			</endpoint>

		</remote>
	</config>

</alfresco-config>
