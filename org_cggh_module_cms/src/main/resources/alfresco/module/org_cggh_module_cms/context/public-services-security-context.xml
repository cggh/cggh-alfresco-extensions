<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE beans PUBLIC '-//SPRING//DTD BEAN//EN' 'http://www.springframework.org/dtd/spring-beans.dtd'>

<!-- ========================== -->
<!-- Enforcement of permissions -->
<!-- ========================== -->

<!-- -->
<!-- This file defines the beans that intercept method calls to the repository 
	services -->
<!-- and enforce security based on the currently authenticated user. -->
<!-- -->

<beans>

	<!-- ======================================== -->
	<!-- Post method call application of security -->
	<!-- ======================================== -->
 
	<bean id="siteAcl"
		class="org.cggh.repo.security.permissions.impl.acegi.CustomACLEntryAfterInvocationProvider"
		abstract="false" singleton="true" lazy-init="default" autowire="default"
		dependency-check="default">
		<property name="authorityService"><ref bean="authorityService"/></property>
		<property name="personService"><ref bean="personService"/></property>
	</bean>

	<bean id="afterInvocationManager"
		class="net.sf.acegisecurity.afterinvocation.AfterInvocationProviderManager">
		<property name="providers">
			<list>
				<ref bean="afterAcl" />
				<ref bean="afterAclMarking" />
				<ref local="siteAcl" />
			</list>
		</property>
	</bean>


     <bean id="PersonService_security" class="org.alfresco.repo.security.permissions.impl.acegi.MethodSecurityInterceptor">
        <property name="authenticationManager"><ref bean="authenticationManager"/></property>
        <property name="accessDecisionManager"><ref bean="accessDecisionManager"/></property>
        <property name="afterInvocationManager"><ref local="afterInvocationManager"/></property>
        <property name="objectDefinitionSource">
            <value>
                org.alfresco.service.cmr.security.PersonService.getPerson=ACL_ALLOW,AFTER_ACL_NODE.sys:base.ReadProperties,AFTER_ACL_SHARED_SITE.GROUP_peopleFinders
                org.alfresco.service.cmr.security.PersonService.getPersonOrNull=ACL_ALLOW,AFTER_ACL_NODE.sys:base.ReadProperties,AFTER_ACL_SHARED_SITE_NULL.GROUP_peopleFinders
                org.alfresco.service.cmr.security.PersonService.personExists=ACL_ALLOW,AFTER_ACL_SHARED_SITE.GROUP_peopleFinders
                org.alfresco.service.cmr.security.PersonService.isEnabled=ACL_ALLOW
                org.alfresco.service.cmr.security.PersonService.createMissingPeople=ACL_ALLOW
                org.alfresco.service.cmr.security.PersonService.setCreateMissingPeople=ACL_METHOD.ROLE_ADMINISTRATOR
                org.alfresco.service.cmr.security.PersonService.getMutableProperties=ACL_ALLOW
                org.alfresco.service.cmr.security.PersonService.setPersonProperties=ACL_METHOD.ROLE_ADMINISTRATOR
                org.alfresco.service.cmr.security.PersonService.isMutable=ACL_ALLOW
                org.alfresco.service.cmr.security.PersonService.createPerson=ACL_METHOD.ROLE_ADMINISTRATOR
                org.alfresco.service.cmr.security.PersonService.deletePerson=ACL_METHOD.ROLE_ADMINISTRATOR
                org.alfresco.service.cmr.security.PersonService.notifyPerson=ACL_METHOD.ROLE_ADMINISTRATOR
                org.alfresco.service.cmr.security.PersonService.getAllPeople=ACL_ALLOW,AFTER_ACL_SHARED_SITE.GROUP_peopleFinders
                org.alfresco.service.cmr.security.PersonService.getPeople=ACL_ALLOW,AFTER_ACL_NODE.sys:base.ReadProperties,AFTER_ACL_SHARED_SITE.GROUP_peopleFinders
                org.alfresco.service.cmr.security.PersonService.getPeopleFilteredByProperty=ACL_ALLOW,AFTER_ACL_SHARED_SITE.sys:base.ReadProperties,AFTER_ACL_SHARED_SITE.GROUP_peopleFinders
                org.alfresco.service.cmr.security.PersonService.getPeopleContainer=ACL_ALLOW
                org.alfresco.service.cmr.security.PersonService.getUserNamesAreCaseSensitive=ACL_ALLOW
                org.alfresco.service.cmr.security.PersonService.getUserIdentifier=ACL_ALLOW
                org.alfresco.service.cmr.security.PersonService.countPeople=ACL_ALLOW
                org.alfresco.service.cmr.security.PersonService.*=ACL_DENY
         </value>
        </property>
    </bean>
 
 
	<!-- ============ -->
	<!-- Site Service -->
	<!-- ============ -->
	<!-- Modified so that only administrators can create or delete sites -->
	<bean id="SiteService_security"
		class="org.alfresco.repo.security.permissions.impl.acegi.MethodSecurityInterceptor">
		<property name="authenticationManager">
			<ref bean="authenticationManager" />
		</property>
		<property name="accessDecisionManager">
			<ref bean="accessDecisionManager" />
		</property>
		<property name="afterInvocationManager">
			<ref bean="afterInvocationManager" />
		</property>
		<property name="objectDefinitionSource">
			<value>
				org.alfresco.service.cmr.site.SiteService.cleanSitePermissions=ACL_NODE.0.sys:base.ReadProperties
				org.alfresco.service.cmr.site.SiteService.createContainer=ACL_ALLOW,AFTER_ACL_NODE.sys:base.ReadProperties
				org.alfresco.service.cmr.site.SiteService.createSite=ACL_METHOD.ROLE_ADMINISTRATOR
				org.alfresco.service.cmr.site.SiteService.deleteSite=ACL_METHOD.ROLE_ADMINISTRATOR
				org.alfresco.service.cmr.site.SiteService.findSites=ACL_ALLOW,AFTER_ACL_NODE.sys:base.ReadProperties
				org.alfresco.service.cmr.site.SiteService.getContainer=ACL_ALLOW,AFTER_ACL_NODE.sys:base.ReadProperties
				org.alfresco.service.cmr.site.SiteService.listContainers=ACL_ALLOW,AFTER_ACL_NODE.sys:base.ReadProperties
				org.alfresco.service.cmr.site.SiteService.getMembersRole=ACL_ALLOW
				org.alfresco.service.cmr.site.SiteService.getMembersRoleInfo=ACL_ALLOW
				org.alfresco.service.cmr.site.SiteService.resolveSite=ACL_ALLOW
				org.alfresco.service.cmr.site.SiteService.getSite=ACL_ALLOW,AFTER_ACL_NODE.sys:base.ReadProperties
				org.alfresco.service.cmr.site.SiteService.getSiteShortName=ACL_ALLOW,AFTER_ACL_NODE.sys:base.ReadProperties
				org.alfresco.service.cmr.site.SiteService.getSiteGroup=ACL_ALLOW
				org.alfresco.service.cmr.site.SiteService.getSiteRoleGroup=ACL_ALLOW
				org.alfresco.service.cmr.site.SiteService.getSiteRoles=ACL_ALLOW
				org.alfresco.service.cmr.site.SiteService.getSiteRoot=ACL_ALLOW,AFTER_ACL_NODE.sys:base.ReadProperties
				org.alfresco.service.cmr.site.SiteService.hasContainer=ACL_ALLOW
				org.alfresco.service.cmr.site.SiteService.hasCreateSitePermissions=ACL_ALLOW
				org.alfresco.service.cmr.site.SiteService.hasSite=ACL_ALLOW
				org.alfresco.service.cmr.site.SiteService.isMember=ACL_ALLOW
				org.alfresco.service.cmr.site.SiteService.listMembers=ACL_ALLOW
				org.alfresco.service.cmr.site.SiteService.listMembersInfo=ACL_ALLOW
				org.alfresco.service.cmr.site.SiteService.listMembersPaged=ACL_ALLOW
				org.alfresco.service.cmr.site.SiteService.listSites=ACL_ALLOW,AFTER_ACL_NODE.sys:base.ReadProperties
				org.alfresco.service.cmr.site.SiteService.listSitesPaged=ACL_ALLOW,AFTER_ACL_NODE.sys:base.ReadProperties
				org.alfresco.service.cmr.site.SiteService.removeMembership=ACL_ALLOW
				org.alfresco.service.cmr.site.SiteService.canAddMember=ACL_ALLOW
				org.alfresco.service.cmr.site.SiteService.setMembership=ACL_ALLOW
				org.alfresco.service.cmr.site.SiteService.updateSite=ACL_ALLOW
				org.alfresco.service.cmr.site.SiteService.countAuthoritiesWithRole=ACL_ALLOW
				org.alfresco.service.cmr.site.SiteService.isSiteAdmin=ACL_ALLOW
				org.alfresco.service.cmr.site.SiteService.*=ACL_DENY
			</value>
		</property>
	</bean>


</beans>
